<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{C16F1A52-E4B4-328E-8D9B-71A3D62199BB}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>detectBDRect</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">E:\ImageProcess\detect_blocked_rect\build\Debug\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">detectBDRect.dir\Debug\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">detectBDRect</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">E:\ImageProcess\detect_blocked_rect\build\Release\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">detectBDRect.dir\Release\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">detectBDRect</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">E:\ImageProcess\detect_blocked_rect\build\MinSizeRel\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">detectBDRect.dir\MinSizeRel\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">detectBDRect</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">E:\ImageProcess\detect_blocked_rect\build\RelWithDebInfo\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">detectBDRect.dir\RelWithDebInfo\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">detectBDRect</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</GenerateManifest>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions>%(AdditionalOptions)  /machine:X86</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;D:\0pencv331\x86\vc12\lib\opencv_photo331d.lib;D:\0pencv331\x86\vc12\lib\opencv_stitching331d.lib;D:\0pencv331\x86\vc12\lib\opencv_dpm331d.lib;D:\0pencv331\x86\vc12\lib\opencv_face331d.lib;D:\0pencv331\x86\vc12\lib\opencv_fuzzy331d.lib;D:\0pencv331\x86\vc12\lib\opencv_line_descriptor331d.lib;D:\0pencv331\x86\vc12\lib\opencv_plot331d.lib;D:\0pencv331\x86\vc12\lib\opencv_xfeatures2d331d.lib;D:\0pencv331\x86\vc12\lib\opencv_ximgproc331d.lib;D:\0pencv331\x86\vc12\lib\opencv_xobjdetect331d.lib;D:\0pencv331\x86\vc12\lib\opencv_ml331d.lib;D:\0pencv331\x86\vc12\lib\opencv_calib3d331d.lib;D:\0pencv331\x86\vc12\lib\opencv_features2d331d.lib;D:\0pencv331\x86\vc12\lib\opencv_flann331d.lib;D:\0pencv331\x86\vc12\lib\opencv_highgui331d.lib;D:\0pencv331\x86\vc12\lib\opencv_imgcodecs331d.lib;D:\0pencv331\x86\vc12\lib\opencv_objdetect331d.lib;D:\0pencv331\x86\vc12\lib\opencv_imgproc331d.lib;D:\0pencv331\x86\vc12\lib\opencv_core331d.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/ImageProcess/detect_blocked_rect/build/Debug/detectBDRect.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/ImageProcess/detect_blocked_rect/build/Debug/detectBDRect.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat></DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions>%(AdditionalOptions)  /machine:X86</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;D:\0pencv331\x86\vc12\lib\opencv_photo331.lib;D:\0pencv331\x86\vc12\lib\opencv_stitching331.lib;D:\0pencv331\x86\vc12\lib\opencv_dpm331.lib;D:\0pencv331\x86\vc12\lib\opencv_face331.lib;D:\0pencv331\x86\vc12\lib\opencv_fuzzy331.lib;D:\0pencv331\x86\vc12\lib\opencv_line_descriptor331.lib;D:\0pencv331\x86\vc12\lib\opencv_plot331.lib;D:\0pencv331\x86\vc12\lib\opencv_xfeatures2d331.lib;D:\0pencv331\x86\vc12\lib\opencv_ximgproc331.lib;D:\0pencv331\x86\vc12\lib\opencv_xobjdetect331.lib;D:\0pencv331\x86\vc12\lib\opencv_ml331.lib;D:\0pencv331\x86\vc12\lib\opencv_calib3d331.lib;D:\0pencv331\x86\vc12\lib\opencv_features2d331.lib;D:\0pencv331\x86\vc12\lib\opencv_flann331.lib;D:\0pencv331\x86\vc12\lib\opencv_highgui331.lib;D:\0pencv331\x86\vc12\lib\opencv_imgcodecs331.lib;D:\0pencv331\x86\vc12\lib\opencv_objdetect331.lib;D:\0pencv331\x86\vc12\lib\opencv_imgproc331.lib;D:\0pencv331\x86\vc12\lib\opencv_core331.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/ImageProcess/detect_blocked_rect/build/Release/detectBDRect.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/ImageProcess/detect_blocked_rect/build/Release/detectBDRect.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat></DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions>%(AdditionalOptions)  /machine:X86</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;D:\0pencv331\x86\vc12\lib\opencv_photo331.lib;D:\0pencv331\x86\vc12\lib\opencv_stitching331.lib;D:\0pencv331\x86\vc12\lib\opencv_dpm331.lib;D:\0pencv331\x86\vc12\lib\opencv_face331.lib;D:\0pencv331\x86\vc12\lib\opencv_fuzzy331.lib;D:\0pencv331\x86\vc12\lib\opencv_line_descriptor331.lib;D:\0pencv331\x86\vc12\lib\opencv_plot331.lib;D:\0pencv331\x86\vc12\lib\opencv_xfeatures2d331.lib;D:\0pencv331\x86\vc12\lib\opencv_ximgproc331.lib;D:\0pencv331\x86\vc12\lib\opencv_xobjdetect331.lib;D:\0pencv331\x86\vc12\lib\opencv_ml331.lib;D:\0pencv331\x86\vc12\lib\opencv_calib3d331.lib;D:\0pencv331\x86\vc12\lib\opencv_features2d331.lib;D:\0pencv331\x86\vc12\lib\opencv_flann331.lib;D:\0pencv331\x86\vc12\lib\opencv_highgui331.lib;D:\0pencv331\x86\vc12\lib\opencv_imgcodecs331.lib;D:\0pencv331\x86\vc12\lib\opencv_objdetect331.lib;D:\0pencv331\x86\vc12\lib\opencv_imgproc331.lib;D:\0pencv331\x86\vc12\lib\opencv_core331.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/ImageProcess/detect_blocked_rect/build/MinSizeRel/detectBDRect.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/ImageProcess/detect_blocked_rect/build/MinSizeRel/detectBDRect.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\ImageProcess\detect_blocked_rect\src\detectBDRect;D:\0pencv331\include;D:\0pencv331\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions>%(AdditionalOptions)  /machine:X86</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;D:\0pencv331\x86\vc12\lib\opencv_photo331.lib;D:\0pencv331\x86\vc12\lib\opencv_stitching331.lib;D:\0pencv331\x86\vc12\lib\opencv_dpm331.lib;D:\0pencv331\x86\vc12\lib\opencv_face331.lib;D:\0pencv331\x86\vc12\lib\opencv_fuzzy331.lib;D:\0pencv331\x86\vc12\lib\opencv_line_descriptor331.lib;D:\0pencv331\x86\vc12\lib\opencv_plot331.lib;D:\0pencv331\x86\vc12\lib\opencv_xfeatures2d331.lib;D:\0pencv331\x86\vc12\lib\opencv_ximgproc331.lib;D:\0pencv331\x86\vc12\lib\opencv_xobjdetect331.lib;D:\0pencv331\x86\vc12\lib\opencv_ml331.lib;D:\0pencv331\x86\vc12\lib\opencv_calib3d331.lib;D:\0pencv331\x86\vc12\lib\opencv_features2d331.lib;D:\0pencv331\x86\vc12\lib\opencv_flann331.lib;D:\0pencv331\x86\vc12\lib\opencv_highgui331.lib;D:\0pencv331\x86\vc12\lib\opencv_imgcodecs331.lib;D:\0pencv331\x86\vc12\lib\opencv_objdetect331.lib;D:\0pencv331\x86\vc12\lib\opencv_imgproc331.lib;D:\0pencv331\x86\vc12\lib\opencv_core331.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/ImageProcess/detect_blocked_rect/build/RelWithDebInfo/detectBDRect.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/ImageProcess/detect_blocked_rect/build/RelWithDebInfo/detectBDRect.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\ImageProcess\detect_blocked_rect\src\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule E:/ImageProcess/detect_blocked_rect/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -HE:/ImageProcess/detect_blocked_rect/src -BE:/ImageProcess/detect_blocked_rect/build --check-stamp-file E:/ImageProcess/detect_blocked_rect/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">E:/ImageProcess/detect_blocked_rect/src/CMakeLists.txt;E:\ImageProcess\detect_blocked_rect\src\CMakeLists.txt;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeSystem.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInitialize.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeCCompiler.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeCXXCompiler.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\WindowsPaths.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeRCCompiler.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCXXInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\0pencv331\x86\vc12\lib\OpenCVConfig-version.cmake;D:\0pencv331\x86\vc12\lib\OpenCVConfig.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules-debug.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules-release.cmake;E:\ImageProcess\detect_blocked_rect\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule E:/ImageProcess/detect_blocked_rect/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -HE:/ImageProcess/detect_blocked_rect/src -BE:/ImageProcess/detect_blocked_rect/build --check-stamp-file E:/ImageProcess/detect_blocked_rect/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">E:/ImageProcess/detect_blocked_rect/src/CMakeLists.txt;E:\ImageProcess\detect_blocked_rect\src\CMakeLists.txt;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeSystem.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInitialize.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeCCompiler.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeCXXCompiler.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\WindowsPaths.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeRCCompiler.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCXXInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\0pencv331\x86\vc12\lib\OpenCVConfig-version.cmake;D:\0pencv331\x86\vc12\lib\OpenCVConfig.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules-debug.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules-release.cmake;E:\ImageProcess\detect_blocked_rect\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule E:/ImageProcess/detect_blocked_rect/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -HE:/ImageProcess/detect_blocked_rect/src -BE:/ImageProcess/detect_blocked_rect/build --check-stamp-file E:/ImageProcess/detect_blocked_rect/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">E:/ImageProcess/detect_blocked_rect/src/CMakeLists.txt;E:\ImageProcess\detect_blocked_rect\src\CMakeLists.txt;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeSystem.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInitialize.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeCCompiler.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeCXXCompiler.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\WindowsPaths.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeRCCompiler.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCXXInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\0pencv331\x86\vc12\lib\OpenCVConfig-version.cmake;D:\0pencv331\x86\vc12\lib\OpenCVConfig.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules-debug.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules-release.cmake;E:\ImageProcess\detect_blocked_rect\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule E:/ImageProcess/detect_blocked_rect/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -HE:/ImageProcess/detect_blocked_rect/src -BE:/ImageProcess/detect_blocked_rect/build --check-stamp-file E:/ImageProcess/detect_blocked_rect/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">E:/ImageProcess/detect_blocked_rect/src/CMakeLists.txt;E:\ImageProcess\detect_blocked_rect\src\CMakeLists.txt;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeSystem.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInitialize.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeCCompiler.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeCXXCompiler.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\WindowsPaths.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\3.8.0-rc2\CMakeRCCompiler.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCXXInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\0pencv331\x86\vc12\lib\OpenCVConfig-version.cmake;D:\0pencv331\x86\vc12\lib\OpenCVConfig.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules-debug.cmake;D:\0pencv331\x86\vc12\lib\OpenCVModules-release.cmake;E:\ImageProcess\detect_blocked_rect\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">E:\ImageProcess\detect_blocked_rect\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="E:\ImageProcess\detect_blocked_rect\src\detectBlockedRect.hpp" />
    <ClCompile Include="E:\ImageProcess\detect_blocked_rect\src\main.cpp"  />
    <ClCompile Include="E:\ImageProcess\detect_blocked_rect\src\detectBlockedRect.cpp"  />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:\ImageProcess\detect_blocked_rect\build\ZERO_CHECK.vcxproj">
      <Project>44C629E4-CC90-31EC-B7CD-A036894DD405</Project>
      <Name>ZERO_CHECK</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>